#################################################################
# Description:  Playbook to check for java version, backup    ###
#               file, edit file, kill service, and start      ###
#               service                                       ###
# Enviroment:   Dev & Test                                    ###
# Version:      1                                             ###
# Filename:     weblogic_java_patching.yaml                   ###
#################################################################


# Comment out this section if using test_web.yaml to call this play book
# start
---
- hosts: dt
#  vars:
  tasks:
# end of comment section

# Check pre-requirements of java and weblogic is installed
    - name: Check Latest WebLogic Exists
      stat:
        path: /opt/weblogic/{{ latest_weblogic }}
      register: weblogic_file_details

    - name: Check Latest Java Exists
      stat:
        path: '{{ latest_java_path }}{{ latest_java }}'
      register: java_file_details

    - debug:
        msg: "Latest WebLogic Pre-Requirements Met"
      when: weblogic_file_details.stat.exists and weblogic_file_details.stat.isdir == true

    - debug:
        msg: "Latest Java Pre-Requirements Met"
      when: java_file_details.stat.exists and java_file_details.stat.isdir == true

    - debug:
        msg: "Latest WebLogic Doesn't Exist!!!"
      when: weblogic_file_details.stat.exists == false 

    - debug:
        msg: "Latest Java Doesn't Exist!!!"
      when: java_file_details.stat.exists == false 

# Check to see if files already have the new java version and if so ignore error message and record result for condition execution below of the other tasks

#    - name: Check for Current Java Version in setDomainEnv.sh    
#      shell: "cat /o/y/z//domain/{{ zowner_DOMAIN }}/bin/setDomainEnv.sh | grep {{ current_java }}"
#      changed_when: False
#      register: current_java_result_setdomainenv
#      ignore_errors: yes

#    - name: Check for Current Java Version in Bash Profile
#      shell: "cat /o/y/z//.bash_profile | grep {{ current_java }}"
#      changed_when: False
#      register: current_java_result_bash
#      ignore_errors: yes

#    - name: Check for Current Java Version in Derby Startup Script
#      shell: "cat /o/y/z//scripts/start_derby.sh | grep {{ current_java }}"
#      changed_when: False
#      register: current_java_result_derby
#      ignore_errors: yes

#    - name: Check for Current WebLogic Version in setDomainEnv.sh
#      changed_when: False
#      shell: "cat /o/y/z//domain/{{ zowner_DOMAIN }}/bin/setDomainEnv.sh | grep {{ current_weblogic }}"
#      register: current_java_result_weblogic
#      ignore_errors: yes

# Make Backups of files that will be changed if new java version number is not present in file
    - name: get time
      shell: date +%Y%m%d-%H%M%S
      register: backuptime

    - name: Backup Bash Profile
      copy:
        src: /o/y/z//.bash_profile
        dest: /o/y/z//.bash_profile_{{backuptime.stdout}}
        remote_src: yes
        mode: 0755
      when: java_file_details.stat.exists
#      when: current_java_result_bash.rc == 0 and java_file_details.stat.exists

    - name: Backup Derby
      copy:
        src: /o/y/z//scripts/start_derby.sh
        dest: /o/y/z//scripts/start_derby.sh_{{backuptime.stdout}}
        remote_src: yes
        mode: 0755
      when: java_file_details.stat.exists
#      when: current_java_result_derby.rc == 0 and java_file_details.stat.exists

    - name: Backup setDomainEnv.sh due for Java Version
      copy:
        src: /o/y/z//domain/{{ zowner_DOMAIN}}/bin/setDomainEnv.sh
        dest: /o/y/z//domain/{{zowner_DOMAIN}}/bin/setDomainEnv.sh_{{backuptime.stdout}}
        remote_src: yes
        mode: 0755
      when: java_file_details.stat.exists
#      when: current_java_result_setdomainenv.rc == 0 and java_file_details.stat.exists

    - name: Backup setDomainEnv.sh due for WebLogic Version
      copy:
        src: /o/y/z//domain/{{ zowner_DOMAIN}}/bin/setDomainEnv.sh
        dest: /o/y/z//domain/{{zowner_DOMAIN}}/bin/setDomainEnv.sh_{{backuptime.stdout}}
        remote_src: yes
        mode: 0755
      when: weblogic_file_details.stat.exists
#      when: current_java_result_weblogic.rc == 0 and weblogic_file_details.stat.exists


# Change Java version in: .bash_profile, start_dersy.sh, and setDomainEnv.sh
# Change WebLogic version in setDomainEnv.sh
# Env:  Development & Testing

    - name: Edit Java Version in Derby
      replace:
        path: /o/y/z//scripts/start_derby.sh
        regexp: '{{ current_java }}'
        replace: '{{ latest_java }}'
      when: java_file_details.stat.exists
#      when: current_java_result_derby.rc == 0 and java_file_details.stat.exists


    - name: Edit setDomainEnv.sh WL_HOME
      replace:
        path: /o/y/z//domain/{{ zowner_DOMAIN}}//bin/setDomainEnv.sh
        regexp: '{{ current_weblogic }}'
        replace: '{{ latest_weblogic }}'
      when: weblogic_file_details.stat.exists
#      when: current_java_result_weblogic.rc == 0 and weblogic_file_details.stat.exists

    - name: Edit setDomainEnv.sh Java Version
      replace:
        path: /o/y/z//domain/{{ zowner_DOMAIN}}//bin/setDomainEnv.sh
        regexp: '{{ current_java }}'
        replace: '{{ latest_java }}'
      when: java_file_details.stat.exists
#      when: current_java_result_setdomainenv.rc == 0 and java_file_details.stat.exists

    - name: Edit Bash Profile Java Version
      replace:
        path: /o/y/z//.bash_profile
        regexp: '{{ current_java }}'
        replace: '{{ latest_java }}'
      when: java_file_details.stat.exists
#      when: current_java_result_bash.rc == 0 and java_file_details.stat.exists

# Kill Derby
    - name: Check if kill_derby.sh exists
      stat:
        path: /o/y/z//scripts/kill_derby.sh
      register: kderby_script

    - name: Copy over Kill_derby.sh
      copy:
        src: /etc/ansible/scripts/kill_derby.sh
        dest: /o/y/z//scripts/kill_derby.sh
        owner: zowner
        group: zowner
        mode: 0755
      when: kderby_script.stat.exists == false and java_file_details.stat.exists

    - name: Kill Derby
      shell: "bash /o/y/z//scripts/kill_derby.sh"
      async: 10
      poll: 0
      when: kderby_script.stat.exists == true

# Kill WebLogic
    - name: Check if kill_weblogic.sh exists
      stat:
        path: /o/y/z//scripts/kill_weblogic.sh
      register: kweblogic_script

    - name: Copy over Kill_weblogic.sh
      copy:
        src: /etc/ansible/scripts/kill_weblogic.sh
        dest: /o/y/z//scripts/kill_weblogic.sh
        owner: zowner
        group: zowner
        mode: 0755
      when: kweblogic_script.stat.exists == false and java_file_details.stat.exists


    - name: kill weblogic
      shell: "bash /o/y/z//scripts/kill_weblogic.sh"
      async: 10
      poll: 0
      when: kweblogic_script.stat.exists == true

# Start Derby
#    - name: start derby
#      shell: "(bash /o/y/z//scripts/start_derby.sh &)"
#      async: 10
#      poll: 0

# Start WebLogic
#    - name: start weblogic
#      shell: "(bash /o/y/z//domain/{{zowner_DOMAIN}}/startWebLogic.sh &)"
#      async: 10
#      poll: 0

# Source Bash
#    - name: Source Bash Profile
#      shell: "source /o/y/z//.bash_profile"
#      async: 10
#      poll: 0


# Delete Scripts used
    - name: Delete Kill WebLogic Script
      file:
        path: /o/y/z//scripts/kill_weblogic.sh
        state: absent

    - name: Delete Kill Derby Script
      file:
        path: /o/y/z//scripts/kill_derby.sh
        state: absent

